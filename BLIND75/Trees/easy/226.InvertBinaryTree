https://leetcode.com/problems/invert-binary-tree/

dfs recursive
base case:
if root doesnt exist return null
initilize variable temp to root.left = root.right = temp
run function recursively on the left and right subtree
return root


const invertTree = (root) => {
    if (!root) return null

    let temp = root.left
    root.left = root.right
    root.right = temp

    invertTree(root.left)
    invertTree(root.right)

    return root
}
