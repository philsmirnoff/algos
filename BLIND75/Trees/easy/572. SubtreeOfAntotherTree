https://leetcode.com/problems/subtree-of-another-tree/


dfs recursive
base case:
if root is null return false
create dfs function isIdentical(node1, node2) just like in same tree, run it on the node.left, node.right
Check if the current subtree is identical to the target tree, if it is return true
Recursively check if the target tree is a subtree of the left or right subtree of the current node



const isSubtree = (root, subRoot) => {
    if (!root) return false

    const isIdentical = (node1, node2) => {
        if (node1 === node2) return true

        if (!node1 || !node2 || node1.val !== node2.val) return false

        return isIdentical(node1.left, node2.left) && isIdentical(node1.right, node2.right)
    }

    if (isIdentical(root, subRoot)) {
        return true
    }

    return isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot)
}
