**1836. Remove Duplicates From an Unsorted Linked List**

**Medium**

259

9

Add to List

Share

Given the `head` of a linked list, find all the values that appear **more than once** in the list and delete the nodes that have any of those values.

Return *the linked list after the deletions.*

**Example 1:**

![https://assets.leetcode.com/uploads/2021/04/21/tmp-linked-list.jpg](https://assets.leetcode.com/uploads/2021/04/21/tmp-linked-list.jpg)

```
Input: head = [1,2,3,2]
Output: [1,3]
Explanation: 2 appears twice in the linked list, so all 2's should be deleted. After deleting all 2's, we are left with [1,3].
```

var deleteDuplicatesUnsorted = function(head) {
let count = {};
let curr = head;

```
while(curr !== null) {
    count[curr.val] ? count[curr.val]++ : count[curr.val] = 1;
    curr = curr.next
}

curr = head;

let dummy = new ListNode(null, head);
let prev = dummy

while (curr) {
    if (count[curr.val] > 1) {
       curr = curr.next;
        prev.next = curr
} else {
    curr = curr.next
    prev = prev.next
}
}

return dummy.next

```

};
