intersection
Write a function, intersection, that takes in two arrays, a,b, as arguments. The function should return a new array containing elements that are in both of the two arrays.

You may assume that each input array does not contain duplicate elements.

test_00:
intersection([4,2,1,6], [3,6,9,2,10]) // -> [2,6]
test_01:
intersection([2,4,6], [4,2]) // -> [2,4]

my solution:
const intersection = (a, b) => {
  // todo
  // lets create hashmap to keep the track the char and new array
  let map = {}
  let result = [];


  // lets loop over the first array;
  for (let char of a) {
    if (!(char in map)) {
      map[char] = 0;
    }
    map[char]++;
  }

  for (let char of b) {
    if (!(char in map)) {
      map[char] = 0;
    }
    map[char]++;
  }

  for (let char in map) {
    if (map[char] > 1) {
      result.push(Number(char))
    }
    }
  return result;

};


 solution number2 Alvins

 const intersection = (a, b) => {
 const result = []
 const items = new Set();

 for (let item of a) {
   items.add(item);
 }

 for (let elem of b) {
   if (items.has(elem)) {
     result.push(elem)
   }
 }
 return result
//     n = length of array a, m = length of array b
// Time: O(n+m)
// Space: O(n)
// };
