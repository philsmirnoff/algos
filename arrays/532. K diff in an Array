**532. K-diff Pairs in an Array**

**Medium**

2853

2109

Add to List

Share

Given an array of integers `nums` and an integer `k`, return *the number of **unique** k-diff pairs in the array*.

A **k-diff** pair is an integer pair `(nums[i], nums[j])`, where the following are true:

- `0 <= i, j < nums.length`
- `i != j`
- `nums[i] - nums[j] == k`

**Notice** that `|val|` denotes the absolute value of `val`.

**Example 1:**

```
Input: nums = [3,1,4,1,5], k = 2
Output: 2
Explanation: There are two 2-diff pairs in the array, (1, 3) and (3, 5).
Although we have two 1s in the input, we should only return the number ofunique pairs.
```

var findPairs = function(nums, k) {
// return 0 when k is less than 0 since absolute difference is never negative
if (k < 0) return 0

```
// hmap to hold frequency of values
const hmap = new Map()

// iterate and create frequency count for all values
for (const num of nums) {
    if (!hmap.has(num)) {
        hmap.set(num, 1)
    } else {
        hmap.set(num, hmap.get(num) + 1)
    }
}

let counter = 0

// iterate through map keys if k == 0 and value in hmap of k is greater than 2
// increment counter since absolute diff of 2 similar numbers will equal to 0
// If the key + k is in the map also increment counter as (key + k) - k
// will equal the current key
for (const [key, value] of hmap) {
   if (k === 0) {
       if (value >= 2) counter++
   } else {
       if (hmap.has(key + k)) counter++
   }
}

return counter

```

};
