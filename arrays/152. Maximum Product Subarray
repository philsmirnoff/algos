152. Maximum Product Subarray
Medium

11258

348

Add to List

Share
Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

A subarray is a contiguous subsequence of the array.



Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
 [2,3,-2,4]

Constraints:

1 <= nums.length <= 2 * 104
-10 <= nums[i] <= 10
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.


const maxSubProduct = (nums) => {
  let maxSoFar = nums[0];
  let minSoFar = nums[0];
  let solution = nums[0];

  for (let i = 1; i < nums.length; i++) {
    maxSoFar *= nums[i];
    minSoFar *= nums[i];

    // if i is negative number we have to swap, minSoFar and MaxSoFar
    if (nums[i]<0) {
      let tmp = maxSoFar;
      maxSoFar = minSoFar;
      minSoFar = tmp;
    }
    maxSoFar = Math.max(maxSoFar, nums[i]);
      minSoFar = Math.min(minSoFar, nums[i]);
    solution = Math.max(solution, maxSoFar);
  }
  return solution
  }

console.log(maxSubProduct([2,3,-2,4]))


https://youtu.be/-rUBh45rugs
