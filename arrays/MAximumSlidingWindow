239. Sliding Window Maximum
Hard

11894

384

Add to List

Share
You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.

Return the max sliding window.



Example 1:

Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3,3,5,5,6,7]
Explanation:
Window position                Max
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7

var maxSlidingWindow = function (nums, k) {
    const res = [];
    const queue = [];
    let [l, r] = [0, 0];

    while (r < nums.length) {
        while (queue.length && nums[queue[queue.length - 1]] < nums[r]) {
            queue.pop();
        }
        queue.push(r);
        if (l > queue[0]) queue.shift();

        if (r + 1 >= k) {
            res.push(nums[queue[0]]);
            l += 1;
        }
        r += 1;
    }
    return res;
}
