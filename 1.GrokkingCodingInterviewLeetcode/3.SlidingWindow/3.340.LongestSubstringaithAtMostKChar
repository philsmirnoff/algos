340. Longest Substring with At Most K Distinct Characters
Medium
Given a string s and an integer k, return the length of the longest
substring
 of s that contains at most k distinct characters.



Example 1:

Input: s = "eceba", k = 2
Output: 3
Explanation: The substring is "ece" with length 3.
Example 2:

Input: s = "aa", k = 1
Output: 2
Explanation: The substring is "aa" with length 2.

var lengthOfLongestSubstringKDistinct = function(s, k) {

    let windowStart = 0,
      maxLength = 0,
      charFrequency = {};

    // in the following loop we'll try to extend the range [window_start, window_end]
    for (let windowEnd = 0; windowEnd < s.length; windowEnd++) {
      const rightChar = s[windowEnd];
      if (!(rightChar in charFrequency)) {
        charFrequency[rightChar] = 0;
      }
      charFrequency[rightChar] += 1;
      // shrink the sliding window, until we are left with 'k' distinct characters in
      // the char_frequency
      while (Object.keys(charFrequency).length > k) {
        const leftChar = s[windowStart];
        charFrequency[leftChar] -= 1;
        if (charFrequency[leftChar] === 0) {
          delete charFrequency[leftChar];
        }
        windowStart += 1; // shrink the window
      }
      // remember the maximum length so far
      maxLength = Math.max(maxLength, windowEnd - windowStart + 1);
    }

    return maxLength;
};
