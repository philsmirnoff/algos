513. Find Bottom Left Tree Value
Medium

2944

242

Add to List

Share
Given the root of a binary tree, return the leftmost value in the last row of the tree.



Example 1:


Input: root = [2,1,3]
Output: 1
Example 2:


Input: root = [1,2,3,4,null,5,6,null,null,7]
Output: 7



/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var findBottomLeftValue = function(root) {
// initilize leftMostValue to null;

    let leftMostValue = null;
    let maxDepth = -1
    // maxDepth

    const dfs = (node, depth) => {
        if (!node) return;
    // if the current depth is bigger than maxDepth, maxDepth = depth
    // LeftMostValeu = node.val
        if (depth > maxDepth) {
            maxDepth = depth
            leftMostValue = node.val
        }

    // call dfs on left subtree and incresase depth
        dfs(node.left, depth + 1)
     // call dfs on right subtreet and increase depth
        dfs(node.right, depth + 1)

    }


   // call dfs starting from root
    dfs(root, 0)

    // return leftMostValue
    return leftMostValue
};
