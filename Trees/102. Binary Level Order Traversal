102. Binary Tree Level Order Traversal
Medium

8278

161

Add to List

Share
Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).



Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]
Example 2:

Input: root = [1]
Output: [[1]]
Example 3:

Input: root = []
Output: []

//////////////
var levelOrder = function(root) {
    if(!root) return [];
    const results = [];
    let queue = [root];

    while(queue.length){
        const level = [];
        const newQueue = [];
        for(const node of queue){
            level.push(node.val);
            if(node.left) newQueue.push(node.left);
            if(node.right) newQueue.push(node.right);
        }
        results.push(level);
        queue = newQueue;
    }
    return results;
};


Solution #2:
var levelOrder = function(root) {
    if(!root) return [];
    const results = [];
    let queue = [root];

    while(queue.length){
        const level = [];
        const size = queue.length;
        for(let i = 0; i < size; i++){
            const node = queue.shift();
            level.push(node.val);
            if(node.left) queue.push(node.left);
            if(node.right) queue.push(node.right);
        }
        results.push(level);
    }
    return results;
};
