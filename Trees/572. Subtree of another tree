572. Subtree of Another Tree
Easy

5341

286

Add to List

Share
Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.

A subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.



Example 1:


Input: root = [3,4,5,1,2], subRoot = [4,1,2]
Output: true
Example 2:


Input: root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2]
Output: false

Time complexity O(S*T)

// for everysingle node in the tree we will compare to it subtree


var isSubtree = function(root, subRoot) {
    if (root == null) {
        return false;
    } else if (isSameTree(root, subRoot)) {
        return true;
    } else {
        return isSubtree(root.left, subRoot) || isSubtree(root.right, subRoot)
    }
};


const isSameTree = (s, t) => {
    if (s == null || t == null) {
        return s == null && t == null
    } else if (s.val == t.val) {
        return isSameTree(s.left, t.left) && isSameTree(s.right, t.right)
    } else {
        return false;
    }
}
