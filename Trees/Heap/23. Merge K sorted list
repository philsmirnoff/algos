23. Merge k Sorted Lists
Hard

12260

475

Add to List

Share
You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.

Merge all the linked-lists into one sorted linked-list and return it.



Example 1:

Input: lists = [[1,4,5],[1,3,4],[2,6]]
Output: [1,1,2,3,4,4,5,6]
Explanation: The linked-lists are:
[
  1->4->5,
  1->3->4,
  2->6
]
merging them into one sorted list:
1->1->2->3->4->4->5->6
Example 2:

Input: lists = []
Output: []
Example 3:

Input: lists = [[]]
Output: []



/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode[]} lists
 * @return {ListNode}
 */


function mergedLists(a, b) {
    let dummy = new ListNode(0);
    let current = dummy;

    while (a !== null && b !== null) {
        if (a.val < b.val) {
            dummy.next = a;
            a = a.next
           } else {
            dummy.next = b;
            b = b.next;
        }
        dummy = dummy.next
    }
       // dummy.next = a || b
      if (!a) {
          dummy.next = b;
      }
    else {
          dummy.next = a;
      }
       return current.next
}


var mergeKLists = function(lists) {
    if (lists.length === 0) {
        return null
    }

    while (lists.length > 1) {
        let a = lists.shift()
        let b = lists.shift()
        let mergedAB = mergedLists(a, b)
        lists.push(mergedAB)
        }
    return lists[0]
};

