u need to find the sum of all the nodes


const depthFirstSearch = (root) => {
  if (root === null) return 0;

  return root.val + depthFirstSearch(root.left) + depthfirstSearch(root.right)

}


// itreative solution breadth first search
const breadthFirstSearch = (root) => {
  if (root === null) return 0;
  const queue = [root]
  let sum = 0

  while (queue.length > 0) {
  let curr = queue.shift()
  sum += curr.val
    if (curr.left) queue.push(curr.left)
  if (curr.right) queue.push(curr.right)

  }
  return sum
}

// itertaive solution depthFirstSearch using stack
const depthFirstSearch = (root) => {
  if (root === null) return 0;
  let sum = 0;
  const stack = [root]
  while (stack.length > 0) {
    const curr = stack.pop()
    sum += curr.val;

    if (curr.right) stack.push(curr.right);
    if (curr.left) stack.push(curr.left)
  }
  return sum;
}
